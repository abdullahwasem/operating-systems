#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <sys/wait.h>

int laps, lap_time, total_time = 0;

void child_process(int lap_number)
{
    sleep(lap_time);
    printf("Lap %d: %d seconds\n", lap_number, lap_time);
    exit(0);
}

void signal_handler(int signum)
{
    pid_t pid;
    int status;

    while ((pid = waitpid(-1, &status, WNOHANG)) != -1)
    {
        if (WIFEXITED(status))
        {
            total_time += lap_time;
        }
    }
}

int main()
{
    printf("Enter the number of laps: ");
    scanf("%d", &laps);

    printf("Enter the lap time in seconds: ");
    scanf("%d", &lap_time);

    struct sigaction sa;
    sa.sa_handler = signal_handler;
    sigemptyset(&sa.sa_mask);
    sa.sa_flags = SA_RESTART | SA_NOCLDSTOP;

    if (sigaction(SIGCHLD, &sa, NULL) == -1)
    {
        perror("sigaction");
        exit(1);
    }

    for (int i = 1; i <= laps; i++)
    {
        pid_t pid = fork();

        if (pid == -1)
        {
            perror("fork");
            exit(1);
        }
        else if (pid == 0)
        {
            child_process(i);
        }
    }

    while (wait(NULL) > 0);

    printf("Total time taken: %d seconds\n", total_time);

    return 0;
}